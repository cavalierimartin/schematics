import { Component, OnInit, inject } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Router } from '@angular/router';
import { <%= classify(singular) %> } from '../../../models/<%= dasherize(singular) %>';
import { <%= classify(singular) %>Store } from '../../../store/<%= dasherize(singular) %>.store';
import { Actions } from '../../../models/common';

@Component({
  selector: 'app-update-<%= dasherize(singular) %>',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './update-<%= dasherize(singular) %>.component.html',
  styleUrls: ['./update-<%= dasherize(singular) %>.component.scss']
})
export class Update<%= classify(singular) %>Component implements OnInit {
  <%= camelize(singular) %>: <%= classify(singular) %> = { name: '', code: '', symbol: '' }; // #TODO: FIXME: usar la interface
  <%= camelize(singular) %>Store = inject(<%= classify(singular) %>Store);
  router = inject(Router);
  action = this.<%= camelize(singular) %>Store.selected<%= classify(singular) %>() ? Actions.CREATE : Actions.UPDATE;

  ngOnInit() {
    this.<%= camelize(singular) %> = this.<%= camelize(singular) %>Store.selected<%= classify(singular) %>() || this.<%= camelize(singular) %>;
    console.log(this.<%= camelize(singular) %>Store.selected<%= classify(singular) %>());
  }

  onSave() {
    if (this.action === Actions.CREATE) {
      // Update existing <%= camelize(singular) %>
      this.<%= camelize(singular) %>Store.update<%= classify(singular) %>(this.<%= camelize(singular) %>);
      this.router.navigate(['/<%= dasherize(plural) %>']);
    } else {
      // Add new <%= capitalize(singular) %>
      this.<%= camelize(singular) %>Store.add<%= classify(singular) %>(this.<%= camelize(singular) %>);
      this.router.navigate(['/<%= dasherize(plural) %>']);
    }
  }
  
  onCancel() {
    this.router.navigate(['/<%= dasherize(plural) %>']);
  }
}
